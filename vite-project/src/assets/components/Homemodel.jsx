/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/model/untitled4.glb -o C:\Users\91827\Desktop\portfolio\vite-project\src\assets\components\Homemodel.jsx -k -r public 
*/

import React, { useRef, useState, useEffect } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Dragon(props) {
  const group = useRef()
  const { scene, animations: rawAnimations } = useGLTF('/model/untitled4.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)

  // Only use fly2 animation (index 24)
  const animations = React.useMemo(() => {
    if (!rawAnimations || !rawAnimations[24]) return [];
    rawAnimations[7].name = "fly2";
    return [rawAnimations[7]];
  }, [rawAnimations]);

  const { actions } = useAnimations(animations, group)

  // Play fly2 animation on click
  // const handleClick = () => {
  //   if (actions.fly2) {
  //     actions.fly2.reset().fadeIn(0).play();
  //   }
  // };

  // Optionally, play fly2 once on mount
  useEffect(() => {
    if (actions.fly2) {
      actions.fly2.reset().fadeIn(0).play();
    }
  }, [actions]);

  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      position={[3, 0, 2]}
      rotation={[0, -Math.PI/4, 0]}
      // onClick={handleClick}
    >
      <group name="Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} scale={0.3}>
          <group name="M_B_44_Qishilong_skin_SkeletonFBX" rotation={[Math.PI / 2, 0, 0]} scale={0.005}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="Object_4">
                  <primitive object={nodes._rootJoint} />
                  <group name="M_B_44_Qishilong_skin" rotation={[-Math.PI / 2, 0, 0]} />
                  <group name="Object_6" rotation={[-Math.PI / 2, 0, 0]} />
                  <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials.MI_M_B_44_Qishilong_body02_Inst} skeleton={nodes.Object_7.skeleton} />
                  <skinnedMesh name="Object_8" geometry={nodes.Object_8.geometry} material={materials.MI_M_B_44_Qishilong_body02_2_Inst} skeleton={nodes.Object_8.skeleton} />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/model/untitled4.glb')

